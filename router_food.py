# -*- coding: utf-8 -*-
"""router_food.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cpSgg3Qb6DeNDbxHhNHP_1AWKi3-QiwE
"""

# router_food.py
import io
from fastapi import APIRouter, UploadFile, File, HTTPException
from fastapi.responses import JSONResponse
from ultralytics import YOLO
from PIL import Image
import torch
from pathlib import Path
import yaml

# ── 모델 로딩
ROOT = Path(__file__).parent / "models" / "food"
model = YOLO(str(ROOT / "best.pt"))
model.to("cuda:0" if torch.cuda.is_available() else "cpu").eval()

with open(ROOT / "data.yaml", encoding="utf-8") as f:
    names = yaml.safe_load(f)["names"]

router = APIRouter(prefix="/food", tags=["food"])

@router.post("/predict")
async def predict(file: UploadFile = File(...)):
    if not file.content_type.startswith("image/"):
        raise HTTPException(status_code=415, detail="이미지 파일만 지원합니다.")
    img = Image.open(io.BytesIO(await file.read())).convert("RGB")
    result = model.predict(img, conf=0.10, iou=0.5, verbose=False)[0]

    output = []
    for xyxy, conf, cls in zip(result.boxes.xyxy, result.boxes.conf, result.boxes.cls):
        output.append({
            "bbox": [round(x.item(), 2) for x in xyxy],
            "conf": round(conf.item(), 4),
            "id": int(cls),
            "name": names[int(cls)]
        })

    return JSONResponse({"n": len(output), "detections": output})